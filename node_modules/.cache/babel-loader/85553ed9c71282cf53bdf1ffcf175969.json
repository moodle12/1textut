{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hafsa\\\\my-reactapp\\\\textut\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport Text from './Components/Text'; //import About from './Components/About';\n\nimport React, { useState } from 'react';\nimport Alert from './Components/Alert'; //import { BrowserRouter as Router, Routes, Route, Link} from \"react-router-dom\";\n// let a=44;\n// let b=77;\n// let c=a+b;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      document.title = 'Text Utils- Blue Dark Mode';\n      showAlert(\"Blue Dark mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.title = 'Text Utils- Light Mode';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  const greentoggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'green';\n      document.title = 'Text Utils- Green Dark Mode';\n      showAlert(\"Green Dark mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.title = 'Text Utils- Light Mode';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Text Utils\",\n      mode: mode,\n      toggleMode: toggleMode,\n      greentoggleMode: greentoggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      showAlert: showAlert,\n      heading: \"Enter the text to analyze below\",\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Text","React","useState","Alert","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","greentoggleMode"],"sources":["C:/Users/hafsa/my-reactapp/textut/src/App.js"],"sourcesContent":["import './App.css';\r\nimport Navbar from './Components/Navbar';\r\n import Text from './Components/Text';\r\n //import About from './Components/About';\r\n import React, { useState } from 'react'\r\nimport Alert from './Components/Alert';\r\n//import { BrowserRouter as Router, Routes, Route, Link} from \"react-router-dom\";\r\n\r\n// let a=44;\r\n// let b=77;\r\n// let c=a+b;\r\nfunction App() {\r\n  const [mode, setMode] = useState('light');\r\n  const [alert, setAlert] = useState(null);\r\n  const showAlert = (message, type)=>{\r\n    setAlert({\r\n      msg: message,\r\n      type: type\r\n    })\r\n    setTimeout(() => {\r\n        setAlert(null);\r\n    }, 1500);\r\n}\r\n  const toggleMode = () =>\r\n  {\r\n    if(mode === 'light')\r\n    {\r\n      setMode('dark');\r\n      document.body.style.backgroundColor = '#042743';\r\n      document.title='Text Utils- Blue Dark Mode'\r\n      showAlert(\"Blue Dark mode has been enabled\", \"success\");\r\n    }\r\n    else\r\n    {\r\n      setMode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      document.title='Text Utils- Light Mode'\r\n      showAlert(\"Light mode has been enabled\", \"success\");\r\n    }\r\n  }\r\n  const greentoggleMode = () =>\r\n  {\r\n    if(mode === 'light')\r\n    {\r\n      setMode('dark');\r\n      document.body.style.backgroundColor = 'green';\r\n      document.title='Text Utils- Green Dark Mode'\r\n      showAlert(\"Green Dark mode has been enabled\", \"success\");\r\n    }\r\n    else\r\n    {\r\n      setMode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      document.title='Text Utils- Light Mode'\r\n      showAlert(\"Light mode has been enabled\", \"success\");\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n     <Navbar title=\"Text Utils\" mode={mode} toggleMode={toggleMode} greentoggleMode={greentoggleMode}/>\r\n  <Alert alert={alert}/>\r\n  <Text showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\r\n    {/* <Router>\r\n      <Routes>\r\n  <Route exact path= \"/about\" element={ <About/> }>\r\n</Route>\r\n  <Route exact path=\"/\" element={<Text showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />}>\r\n</Route>\r\n</Routes>\r\n  </Router> */}\r\n  {/* <div className=\"container my-3\">\r\n    <About/>\r\n  </div> */}\r\n   {/* <div className=\"container\">\r\n  <Text showAlert={showAlert} headop=\"Enter text to Analyze\" mode={mode}/>\r\n  </div>  */}\r\n     {/* <h1 className=\"name\">Moodle</h1> \r\n     <nav className=\"n\">\r\n      <li className=\"na\">oregano</li>\r\n      <li className=\"na1\">oregano2</li>\r\n      <li className=\"na2\">oregano3</li>\r\n      </nav>\r\n      <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem hic reiciendis tempore neque facilis. Laborum repudiandae eaque sapiente eligendi, fuga dolore, beatae tempore minus vero ea repellat impedit quidem numquam.\r\n        ths is {a} and {c}\r\n      </p> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACC,OAAOC,IAAP,MAAiB,mBAAjB,C,CACA;;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACD,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;AAEA;AACA;AACA;;;;;AACA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,OAAD,CAAhC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;;EACA,MAAMO,SAAS,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAiB;IACjCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OADE;MAEPC,IAAI,EAAEA;IAFC,CAAD,CAAR;IAIAE,UAAU,CAAC,MAAM;MACbL,QAAQ,CAAC,IAAD,CAAR;IACH,CAFS,EAEP,IAFO,CAAV;EAGH,CARC;;EASA,MAAMM,UAAU,GAAG,MACnB;IACE,IAAGT,IAAI,KAAK,OAAZ,EACA;MACEC,OAAO,CAAC,MAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,SAAtC;MACAH,QAAQ,CAACI,KAAT,GAAe,4BAAf;MACAV,SAAS,CAAC,iCAAD,EAAoC,SAApC,CAAT;IACD,CAND,MAQA;MACEH,OAAO,CAAC,OAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;MACAH,QAAQ,CAACI,KAAT,GAAe,wBAAf;MACAV,SAAS,CAAC,6BAAD,EAAgC,SAAhC,CAAT;IACD;EACF,CAhBD;;EAiBA,MAAMW,eAAe,GAAG,MACxB;IACE,IAAGf,IAAI,KAAK,OAAZ,EACA;MACEC,OAAO,CAAC,MAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;MACAH,QAAQ,CAACI,KAAT,GAAe,6BAAf;MACAV,SAAS,CAAC,kCAAD,EAAqC,SAArC,CAAT;IACD,CAND,MAQA;MACEH,OAAO,CAAC,OAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;MACAH,QAAQ,CAACI,KAAT,GAAe,wBAAf;MACAV,SAAS,CAAC,6BAAD,EAAgC,SAAhC,CAAT;IACD;EACF,CAhBD;;EAiBA,oBACE;IAAA,wBACC,QAAC,MAAD;MAAQ,KAAK,EAAC,YAAd;MAA2B,IAAI,EAAEJ,IAAjC;MAAuC,UAAU,EAAES,UAAnD;MAA+D,eAAe,EAAEM;IAAhF;MAAA;MAAA;MAAA;IAAA,QADD,eAEF,QAAC,KAAD;MAAO,KAAK,EAAEb;IAAd;MAAA;MAAA;MAAA;IAAA,QAFE,eAGF,QAAC,IAAD;MAAM,SAAS,EAAEE,SAAjB;MAA4B,OAAO,EAAC,iCAApC;MAAsE,IAAI,EAAEJ;IAA5E;MAAA;MAAA;MAAA;IAAA,QAHE;EAAA,gBADF;AA8BD;;GA5EQD,G;;KAAAA,G;AA8ET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}